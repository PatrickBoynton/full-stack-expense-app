{"version":3,"sources":["components/expense-form/edit-mode/EditMode.js","components/expense-form/create/Create.js","components/expense-form/ExpenseForm.js","components/expense-form/new-expense/NewExpense.js","components/ui/Card.js","components/expenses/expense-date/ExpenseDate.js","components/expenses/expense-item/ExpenseItem.js","components/expenses/expense-filter/ExpenseFilter.js","components/chart/chart-bar/ChartBar.js","components/expenses/expense-filter/total-display/TotalDisplay.js","components/chart/Chart.js","components/expenses/expense-chart/ExpenseChart.js","components/expenses/no-expense/NoExpense.js","components/expenses/Expenses.js","App.js","reportWebVitals.js","index.js"],"names":["EditMode","inputValue","handleInput","setEditMode","className","htmlFor","type","value","title","onChange","name","id","amount","min","step","date","style","marginRight","onClick","Create","textAlign","marginTop","ExpenseForm","onSubmitExpense","useState","Date","setInputValue","editMode","onSubmit","event","preventDefault","target","NewExpense","onAddExpense","data","expenseData","Math","round","random","Card","children","classes","ExpenseDate","expenses","month","toLocaleString","day","year","getFullYear","ExpenseItem","ExpenseFilter","onChangeYear","ChartBar","maxValue","label","fillHeight","height","TotalDisplay","total","Chart","dataPoints","map","point","max","reduce","a","b","ExpenseChart","expense","getMonth","NoExpense","props","Expenses","setYear","filter","toString","length","App","setExpenses","fetchData","console","log","fetch","response","json","error","useEffect","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.38e79ce4.chunk.js","sourcesContent":["import React from 'react';\nimport './EditMode.css';\n\nconst EditMode = ({inputValue, handleInput, setEditMode}) => (\n    <>\n        <div className=\"new-expense__controls\">\n            <div className=\"new-expense__control\">\n                <label htmlFor=\"title\">Title</label>\n                <input type=\"text\"\n                       value={inputValue.title}\n                       onChange={handleInput}\n                       name=\"title\"\n                       id=\"title\"/>\n            </div>\n            <div className=\"new-expense__control\">\n                <label htmlFor=\"amount\">Amount</label>\n                <input type=\"number\"\n                       value={inputValue.amount}\n                       onChange={handleInput}\n                       name=\"amount\"\n                       id=\"amount\"\n                       min=\"0.00\"\n                       step=\"0.01\"/>\n            </div>\n            <div className=\"new-expense__control\">\n                <label htmlFor=\"Date\">Date</label>\n                <input type=\"date\"\n                       value={inputValue.date}\n                       onChange={handleInput}\n                       name=\"date\"\n                       id=\"date\"/>\n            </div>\n            <div className=\"new-expense__actions\">\n                <button style={{marginRight: '12px'}} className=\"edit\" onClick={() => setEditMode(false)}>Cancel</button>\n                <button className=\"edit\" type=\"submit\">Add Expense</button>\n            </div>\n        </div>\n    </>\n);\n\nexport default EditMode;","import React from 'react';\nimport './Create.css';\n\nconst Create = ({setEditMode}) => {\n    return (\n        <div style={{textAlign: 'center', marginTop: 0}} className=\"new-expense__actions create\">\n            <button onClick={() => setEditMode(true)}>Create Expense</button>\n        </div>\n    );\n};\n\nexport default Create;","import React, {useState} from 'react';\nimport EditMode from './edit-mode/EditMode';\nimport Create from './create/Create';\nimport './ExpenseForm.css';\n\nconst ExpenseForm = ({onSubmitExpense}) => {\n    const [inputValue, setInputValue] = useState({title: '', amount: 0, date: new Date()});\n    const [editMode, setEditMode] = useState(false);\n\n    const handleInput = (event) => {\n        setInputValue({\n            ...inputValue,\n            [event.target.name]: event.target.value\n        });\n    };\n\n    const handleSubmit = (event) => {\n        event.preventDefault();\n        onSubmitExpense(inputValue);\n    };\n\n    return (\n        <form onSubmit={handleSubmit}>\n            {editMode\n                ? <EditMode handleInput={handleInput}\n                            setEditMode={setEditMode}\n                            inputValue={inputValue}/>\n                : <Create setEditMode={setEditMode}/>}\n        </form>\n    );\n};\n\nexport default ExpenseForm;","import React from 'react';\nimport ExpenseForm from '../ExpenseForm';\nimport './NewExpense.css'\n\nconst NewExpense = ({onAddExpense}) => {\n    const handleSubmit = (data) => {\n        const expenseData = {\n            // TODO change to API id later.\n            id: Math.round(Math.random() * 10000),\n            title: data.title,\n            amount: data.amount,\n            date: new Date(data.date),\n        };\n        onAddExpense(expenseData);\n    };\n    return (\n        <div className=\"new-expense\"><ExpenseForm onSubmitExpense={handleSubmit}/></div>\n    );\n};\n\nexport default NewExpense;","import React from 'react';\nimport './Card.css';\n\nconst Card = ({children, className}) => {\n    const classes = 'card ' + className;\n    return (\n        <div className={classes}>{children}</div>\n    );\n};\n\nexport default Card;","import React from 'react';\nimport './ExpenseDate.css';\n\nconst ExpenseDate = ({expenses}) => {\n    const month = expenses.date.toLocaleString('en-US', {month: 'long'});\n    const day = expenses.date.toLocaleString('en-US', {day: '2-digit'});\n    const year = expenses.date.getFullYear();\n\n    return (\n        <time className=\"expense-date\">\n            <div className=\"expense-date__month\">{month}</div>\n            <div className=\"expense-date__day\">{day}</div>\n            <div className=\"expense-date__year\">{year}</div>\n        </time>\n    );\n};\n\nexport default ExpenseDate;","import React from 'react';\nimport Card from '../../ui/Card';\nimport ExpenseDate from '../expense-date/ExpenseDate';\nimport './ExpenseItem.css'\n\nconst ExpenseItem = ({expenses}) => {\n    return (\n        <Card className=\"expense-item\">\n            <ExpenseDate expenses={expenses}/>\n            <div className=\"expense-item__description\">\n                <h2>{expenses.title}</h2>\n                <span className=\"expense-item__price\">{expenses.amount}</span>\n            </div>\n        </Card>\n    );\n};\n\nexport default ExpenseItem;","import React from 'react';\nimport './ExpenseFilter.css';\n\nconst ExpenseFilter = ({onChangeYear}) => {\n    return (\n        <div className=\"expenses-filter\">\n            <div className=\"expenses-filter__control\">\n                <label htmlFor=\"Filter\">Filter by year</label>\n                <select name=\"filter\" id=\"filter\" onChange={onChangeYear}>\n                    <option value=\"2022\">2022</option>\n                    <option value=\"2021\">2021</option>\n                    <option value=\"2020\">2020</option>\n                </select>\n            </div>\n        </div>\n    );\n};\n\nexport default ExpenseFilter;","import React from 'react';\nimport './ChartBar.css';\n\nconst ChartBar = ({maxValue, value, label}) => {\n    let fillHeight = '0%';\n\n    if (maxValue > 0) {\n        fillHeight = Math.round(value / maxValue * 100) + '%';\n    }\n    return (\n        <div className=\"chart-bar\">\n            <div className=\"chart-bar__inner\">\n                <div className=\"chart-bar__fill\" style={{height: fillHeight}}></div>\n            </div>\n            <span className=\"chart-bar__label\">\n                {label}\n            </span>\n        </div>\n    );\n};\n\nexport default ChartBar;","import React from 'react';\nimport './TotalDisplay.css';\n\nconst TotalDisplay = ({total}) => {\n    return (\n        <div className=\"total-display\">\n            <h3>Total Expenses</h3>\n            <p>{total}</p>\n        </div>\n    );\n};\n\nexport default TotalDisplay;","import React from 'react';\nimport ChartBar from './chart-bar/ChartBar';\nimport TotalDisplay from '../expenses/expense-filter/total-display/TotalDisplay';\nimport './Chart.css';\n\nconst Chart = ({data}) => {\n    const dataPoints = data.map(point => point.value);\n    const maxValue = Math.max(...dataPoints);\n    const total = dataPoints.reduce((a, b) => (a + b));\n    return (\n        <section className=\"chart\">\n            {data.map(point =>\n                <ChartBar key={point.label}\n                          value={point.value}\n                          maxValue={maxValue}\n                          label={point.label}/>\n            )}\n            <TotalDisplay total={total}/>\n        </section>\n    );\n};\n\nexport default Chart;","import React from 'react';\nimport Chart from '../../chart/Chart';\n\nconst ExpenseChart = ({expenses}) => {\n    const data = [\n        {label: 'Jan', value: 0},\n        {label: 'Feb', value: 0},\n        {label: 'Mar', value: 0},\n        {label: 'Apr', value: 0},\n        {label: 'May', value: 0},\n        {label: 'Jun', value: 0},\n        {label: 'Jul', value: 0},\n        {label: 'Aug', value: 0},\n        {label: 'Sep', value: 0},\n        {label: 'Oct', value: 0},\n        {label: 'Nov', value: 0},\n        {label: 'Dec', value: 0},\n    ];\n\n    for (const expense of expenses) {\n        const expenseMonth = expense.date.getMonth();\n        data[expenseMonth].value += expense.amount;\n    }\n    return (\n        <Chart data={data}/>\n    );\n};\n\nexport default ExpenseChart;","import React from 'react';\nimport Card from '../../ui/Card';\nimport './NoExpense.css';\n\nconst NoExpense = props => {\n    return (\n        <Card>\n            <div className=\"no-expense\">\n                <h1>No expenses for this year.</h1>\n            </div>\n        </Card>\n\n    );\n};\n\nexport default NoExpense;","import React, {useState} from 'react';\nimport ExpenseItem from './expense-item/ExpenseItem';\nimport Card from '../ui/Card';\nimport ExpenseFilter from './expense-filter/ExpenseFilter';\nimport ExpenseChart from './expense-chart/ExpenseChart';\nimport NoExpense from './no-expense/NoExpense';\n\nconst Expenses = ({expenses}) => {\n\n    const [year, setYear] = useState('');\n\n    const changeYear = (event) => {\n        setYear(event.target.value);\n    };\n\n    const filter = expenses\n        .filter((expense) => expense.date.getFullYear().toString() === year)\n        .map((expense) => <ExpenseItem key={expense.id} year={year} expenses={expense}/>);\n    return (\n        <Card>\n            <ExpenseFilter onChangeYear={changeYear}/>\n            <ExpenseChart expenses={expenses}/>\n            {filter.length === 0 ? <NoExpense/> : filter}\n        </Card>\n    );\n};\n\nexport default Expenses;\n","import './App.css';\nimport NewExpense from './components/expense-form/new-expense/NewExpense';\nimport Expenses from './components/expenses/Expenses';\nimport {useEffect, useState} from 'react';\n\nconst App = () => {\n    const [expenses, setExpenses] = useState([]);\n\n    const fetchData = async () => {\n        console.log('Fetch Data');\n        try {\n            // This is to avoid having to set up CORS on the back end.\n            // I do not think it is the url, we did it this way in class hooks or no\n            // It should work.\n            const response = await fetch('/api/v1/expenses/');\n            const data = await  response.json();\n            setExpenses([...data]);\n        } catch (e) {\n            console.error('Fetch Error:', e);\n        }\n    };\n\n    useEffect(() => {\n        fetchData();\n    }, [expenses, setExpenses]);\n\n    const addExpense = (expense) => {\n        setExpenses([expense, ...expenses]);\n    };\n\n    return (\n        <>\n            <NewExpense onAddExpense={addExpense}/>\n            <Expenses expenses={expenses}/>\n        </>);\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}